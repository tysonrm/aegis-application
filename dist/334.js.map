{"version":3,"sources":["webpack://aegis-app/./src/domain/Galaxy.js","webpack://aegis-app/./src/domain/Planet.js","webpack://aegis-app/./src/domain/SolarSystem.js","webpack://aegis-app/./src/domain/check-payload.js","webpack://aegis-app/./src/domain/mixins.js","webpack://aegis-app/./src/domain/order.js","webpack://aegis-app/./src/domain/ports.js","webpack://aegis-app/./src/domain/utils.js"],"names":["listSolarSystems","data","console","log","fetchRelatedModel","solarSystem","context","getContext","getStore","systemsInGalaxy","SOLARSYSTEMS","sendGalaticSignal","fn","name","o","planetsInSolarSystem","list","options","filter","galaxyId","id","systems","receiveSolarSignal","sendSolarSignal","receiveGalacticSignal","checkPayload","key","payload","port","model","Object","keys","Error","desc","error","Array","isArray","map","k","reduce","p","c","find","then","latest","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","values","updated","updateMixins","type","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","containsUpdates","changeList","length","every","util","validateModel","input","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","warn","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","missing","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","concat","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","func","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","GlobalMixins","orderStatus","orderTotal","orderNo","OrderStatus","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","price","checkItems","orderItems","items","calcTotal","total","item","qty","itemCount","freezeOnApproval","finalStatus","status","freezeOnCompletion","requiredForGuest","customerId","requiredForApproval","requiredForCompletion","invalidStatusChange","from","to","invalidStatusChanges","statusChangeValid","i","orderTotalValid","recalcTotal","updateSignature","signatureRequired","readyToDelete","handleError","errMsg","emit","paymentCompleted","orderShipped","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","shippingAddress","paymentAuthorized","paymentStatus","refundPayment","verifyAddress","debug","validateAddress","verifyPayment","authorizePayment","authorizeOrder","paymentDeclined","verifyInventory","inventory","insufficient","inv","quantity","getCustomerOrder","customer","custInfo","firstName","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","runOrderWorkflow","updateSync","pickOrder","trackShipment","trackingUpdate","undo","handleOrderEvent","eventType","needsSignature","logMessage","message","msg","substring","time","Date","now","toJSON","toUTCString","makeOrderFactory","dependencies","createOrder","lastName","billingAddress","creditCardNumber","shippingPriority","autoCheckout","requireSignature","fibonacci","result","estimatedArrival","uuid","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","freeze","approve","approvedOrder","logStateChange","cancel","canceledOrder","checkout","errorCallback","timeoutCallback","ports","adapterFn","returnInventory","returnShipment","logUndo","accountOrder","req","res","returnDelivery","cancelPayment","OrderError","code","cancelOrders","cancelOrdersTransform","Transform","objectMode","transform","chunk","_encoding","done","_id","writable","createWriteStream","serialize","approveOrders","approveOrdersTransform","trackAsyncContext","ctx","dur","startTime","Promise","resolve","setTimeout","metric","requestId","get","duration","customHttpStatus","testContainsMany","chat","funcs","initVal","reduceRight","composeAsync","f","passwd","process","env","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","digest","nanoid","makeArray","makeObject","prop","async","promise","ok","object","asObject","asArray"],"mappings":"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","file":"334.js","sourcesContent":["'use strict'\n\n/**\n * @type {import('./index').ModelSpecification}\n */\nexport async function listSolarSystems(data) {\n  console.log({ data })\n  // return { SOLARSYSTEMS: await this.solarSystems() }\n  const solarSystem = await this.fetchRelatedModel('SOLARSYSTEM')\n  console.log({ solarSystem, context: this.getContext('requestContext').getStore() })\n  return { SOLARSYSTEMS: await solarSystem.systemsInGalaxy(data) }\n}\n\nexport async function sendGalaticSignal(data) {\n  console.log({ fn: sendGalaticSignal.name, o: 'Galaxy' })\n}\n","'use strict'\n\n/**\n * @type {import('./index').ModelSpecification}\n */\nexport async function planetsInSolarSystem (data) {\n  console.log({ data })\n  const systems = await this.list({\n    options: { filter: { galaxyId: data.id } }\n  })\n  console.log({ systems })\n  return systems\n}\n\nexport async function receiveSolarSignal (data) {\n  console.log({ fn: receiveSolarSignal.name, o: 'Planet' })\n}\n\nexport async function sendSolarSignal (data) {\n  console.log({ fn: sendSolarSignal.name, o: 'Planet' })\n}\n","'use strict'\n\n/**\n * @type {import('./index').ModelSpecification}\n */\nexport async function systemsInGalaxy (data) {\n  console.log({ data })\n  const systems = await this.list({\n    options: { filter: { galaxyId: data.id } }\n  })\n  console.log({ systems })\n  return systems\n}\n\nexport async function receiveGalacticSignal (data) {\n  console.log({ fn: receiveGalacticSignal.name, o: 'SolarSystem' })\n}\n\nexport async function sendSolarSignal (data) {\n  console.log({ fn: sendSolarSignal.name, o: 'SolarSystem' })\n}\n","'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = {\n    ...changes,\n    [prevmodel]: JSON.parse(JSON.stringify(model || {}))\n  }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }), {})\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\nimport { Transform } from 'stream'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n *\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid', { items })\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus(o.orderStatus) ? null : propKey\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'oInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder\n  //verifyInventory,\n  //verifyPayment,\n  //verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: order => {\n    /**@type {Order} */\n    getCustomerOrder(order).then(order =>\n      runOrderWorkflow(order.updateSync({ orderStatus: OrderStatus.APPROVED }))\n    )\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: order => {\n    console.log('typeof order', typeof order)\n    try {\n      //if (/approved/i.test(order.paymentStatus)) {\n\n      return order.pickOrder(orderPicked)\n\n      // order.emit('PayAuthFail', 'Payment authorization problem')\n      // return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport function runOrderWorkflow (order) {\n  console.log({ orderStatus: order.orderStatus })\n  OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toUTCString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    //const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired: false,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: 0,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      itemId: null,\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  console.debug({ msg: 'got order', order })\n  const approvedOrder = order.updateSync(\n    {\n      orderStatus: OrderStatus.APPROVED\n    },\n    false\n  )\n  console.debug({ approvedOrder })\n  approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport function accountOrder (req, res) {}\n1\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport class OrderError extends Error {\n  constructor (error, code) {\n    super(error)\n    this.code = code\n  }\n}\n\n/**\n *\n * @param {Date.now} data\n * @returns\n */\nexport async function cancelOrders (data) {\n  const cancelOrdersTransform = new Transform({\n    objectMode: true,\n    transform: (chunk, _encoding, done) => {\n      if (chunk._id) delete chunk._id\n      done(\n        null,\n        JSON.stringify({ ...chunk, orderStatus: OrderStatus.CANCELED })\n      )\n    }\n  })\n\n  await this.list({\n    writable: this.createWriteStream(),\n    transform: cancelOrdersTransform,\n    serialize: false\n  })\n\n  return { status: 'ok' }\n}\n\n/**\n *\n * @param {Date.now} data\n * @returns\n */\n\nexport async function approveOrders (data) {\n  try {\n    console.log(x)\n  } catch (error) {\n    throw new OrderError(error, 401)\n  }\n\n  const approveOrdersTransform = new Transform({\n    objectMode: true,\n    transform: (chunk, _encoding, done) => {\n      if (chunk._id) delete chunk._id\n      done(\n        null,\n        JSON.stringify({ ...chunk, orderStatus: OrderStatus.APPROVED })\n      )\n    }\n  })\n\n  await this.list({\n    writable: this.createWriteStream(),\n    transform: approveOrdersTransform,\n    serialize: false\n  })\n\n  return { status: 'ok' }\n}\n\n/**\n *\n * @returns\n */\nexport async function trackAsyncContext () {\n  const ctx = this.getContext()\n  const dur = 'test-duration'\n  const startTime = Date.now()\n\n  await new Promise(resolve => setTimeout(resolve, 100))\n\n  // require('fs')\n  //   .stream('/etc/hosts')\n  //   .pipe(ctx.get('res'))\n\n  ctx.set(dur, Date.now() - startTime)\n\n  const metric = {\n    requestId: ctx.get('id'),\n    fn: trackAsyncContext.name,\n    duration: ctx.get(dur),\n    context: [...ctx]\n  }\n\n  this.emit('metric', metric)\n  console.log(metric.ctx)\n\n  return metric\n}\n\nexport async function customHttpStatus (data) {\n  if (data.args.code)\n    throw new OrderError(data.args.message || 'custom status', data.args.code)\n  try {\n    console.log(x)\n  } catch (error) {\n    throw new OrderError(error, 500)\n  }\n}\n\nexport async function testContainsMany (data) {\n  this.chat()\n  return { status: 'ok' }\n}\n\n","import { systemsInGalaxy } from './SolarSystem'\n\nexport {\n  cancelOrders,\n  approveOrders,\n  trackAsyncContext,\n  customHttpStatus,\n  testContainsMany\n} from './order'\nexport { listSolarSystems, sendGalaticSignal } from './Galaxy'\nexport {\n  systemsInGalaxy,\n  sendSolarSignal,\n  receiveGalacticSignal\n} from './SolarSystem'\nexport {\n  receiveSolarSignal,\n  planetsInSolarSystem\n} from './Planet'\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n"],"sourceRoot":""}